version: '3.8'

services:
  minio:
    image: minio/minio:latest
    container_name: minio-storage-dev
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
      MINIO_SERVER_URL: http://localhost:9000
      MINIO_BROWSER_REDIRECT_URL: http://localhost:9001
    command: server /data --console-address ":9001"
    volumes:
      - minio_data_dev:/data
      - ./minio/config:/root/.minio
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - minio-network-dev

  redis:
    image: redis:7-alpine
    container_name: redis-cache-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
      - ./redis/redis-dev.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - minio-network-dev

  nats:
    image: nats:2-alpine
    container_name: nats-messaging-dev
    ports:
      - "4222:4222"
      - "8222:8222"
      - "6222:6222"  # Cluster port for development
    command: ["-js", "-m", "8222", "-p", "4222", "--cluster_name", "dev-cluster"]
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8222/"]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - minio-network-dev

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: minio-backend-dev
    ports:
      - "8080:8080"
    environment:
      - GIN_MODE=debug
      - PORT=8080
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin123
      - MINIO_BUCKET_NAME=storage
      - MINIO_USE_SSL=false
      - REDIS_ADDR=redis:6379
      - NATS_URL=nats://nats:4222
      - JWT_SECRET=dev-jwt-secret-key-for-development-only
      - JWT_EXPIRATION=24h
      - LOG_LEVEL=debug
      - ENABLE_CORS=true
      - CORS_ORIGINS=http://localhost:3000,http://localhost:3001
    volumes:
      - ../backend:/app
      - /app/tmp  # Exclude air build directory
      - backend_cache:/go/pkg/mod
    depends_on:
      minio:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_healthy
    networks:
      - minio-network-dev
    restart: unless-stopped
    # Enable development features
    stdin_open: true
    tty: true

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: minio-frontend-dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8080
      - WATCHPACK_POLLING=true
      - FAST_REFRESH=true
    volumes:
      - ../frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - minio-network-dev
    restart: unless-stopped
    stdin_open: true
    tty: true

  # Development database browser (optional)
  minio-browser:
    image: minio/mc:latest
    container_name: minio-mc-dev
    depends_on:
      minio:
        condition: service_healthy
    networks:
      - minio-network-dev
    entrypoint: >
      /bin/sh -c "
      mc alias set local http://minio:9000 minioadmin minioadmin123;
      mc mb local/users local/posts local/files local/uploads --ignore-existing;
      mc policy set public local/uploads;
      tail -f /dev/null
      "

volumes:
  minio_data_dev:
  redis_data_dev:
  backend_cache:

networks:
  minio-network-dev:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
